[
    {
        "question": "Για να ορίσω μια μακροεντολή (macro) χρησιμοποιώ την εντολή",
        "answers": ["#ifdef", "#include", "#define", "ifndef"],
        "correctAnswer": "#define",
        "photoURL": "q15q1"
    },
    {
        "question": "Η έξοδος του προεπεξεργαστή είναι ένα αρχείο",
        "answers": ["Δυαδικού κώδικα", "Κώδικα assembly", "Πηγαίου Κώδικα", "Εξαρτάται"],
        "correctAnswer": "Πηγαίου Κώδικα",
        "photoURL": "q15q2"
    },
    {
        "question": "Παλιό θέμα: τι θα τυπώσει το παραπάνω πρόγραμμα:",
        "answers": ["11", "12", "21", "22"],
        "correctAnswer": "11",
        "photoURL": "q15q3"
    },
    {
        "question": "Η συνάρτηση getchar() επιστρέφει δεδομένα τύπου",
        "answers": ["int", "char", "double", "float"],
        "correctAnswer": "int",
        "photoURL": "q15q4"
    },
    {
        "question": "Ψάχνω έναν γνωστό μου σε αμφιθέατρο διαστάσεων n x n, κοιτώντας μία-μία τις θέσεις, ο αλγόριθμός μου είναι σε χρόνο:",
        "answers": ["O(n)", "O(√n)", "O(n^2)", "O(1)"],
        "correctAnswer": "O(n^2)",
        "photoURL": "q15q5"
    },
    {
        "question": "Μετράω τα ψηφία οποιουδήποτε αριθμού n μου δοθεί. Η χρονική πολυπλοκότητα του αλγορίθμου μου είναι:",
        "answers": ["O(n)", "O(n^2)", "O(√n)", "O(logn)"],
        "correctAnswer": "O(logn)",
        "photoURL": "q15q6"
    },
    {
        "question": "Ένας αλγόριθμος μπορεί να έχει πολυπλοκότητα Ο(n^2 + logn)",
        "answers": ["True", "False"],
        "correctAnswer": "True",
        "photoURL": "q15q7"
    },
    {
        "question": "Ένας αλγόριθμος έχει χρονική πολυπλοκότητα O(n). Αυτό σημαίνει ότι χρειάζεται γραμμικό χρόνο",
        "answers": ["στην καλύτερη (πιο γρήγορη) περίπτωση", "στην χειρότερη (πιο αργή) περίπτωση", "στην μέση περίπτωση", "σε κάθε περίπτωση"],
        "correctAnswer": "στην χειρότερη (πιο αργή) περίπτωση",
        "photoURL": "q15q8"
    },
    {
        "question": "Μια συνάρτηση παίρνει έναν αριθμό n και επιστρέφει πόσα bit είναι 1. Πόσο γρήγορη μπορώ να κάνω αυτήν την συνάρτηση;",
        "answers": ["O(n^3)", "O(n^2)", "O(n)", "O(√n)", "O(logn)"],
        "correctAnswer": "O(logn)",
        "photoURL": "q15q9"
    },
    {
        "question": "Η παραπάνω συνάρτηση πολλαπλασιάζει δύο πίνακες m1, m2 διαστάσεων Ν x N. Η χρονική πολυπλοκότητά του είναι:",
        "answers": ["O(n^2)", "O(n!)", "O(n)", "O(τρέχα γύρευε)", "O(logn)", "O(n^3)"],
        "correctAnswer": "O(n^3)",
        "photoURL": "q15q10"
    },
    {
        "question": "Ο παραπάνω αλγόριθμος που ελέγχει αν ένας αριθμός είναι πρώτος έχει χωρική πολυπλοκότητα:",
        "answers": ["O(n)", "O(√n)", "O(1)", "O(n^2)"],
        "correctAnswer": "O(1)",
        "photoURL": "q15q11"
    },
    {
        "question": "Η χωρική πολυπλοκότητα του παραπάνω αναδρομικού αλγορίθμου είναι:",
        "answers": ["O(logn)", "O(n)", "O(n^2)", "O(√n)"],
        "correctAnswer": "O(logn)",
        "photoURL": "q15q12"
    }
]